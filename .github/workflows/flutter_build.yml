name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        cache: true
        
    - name: Fix files
      run: |
        mkdir -p android/app/src/main/kotlin/com/example/t3r_c0d3
        echo 'package com.example.t3r_c0d3
        import io.flutter.embedding.android.FlutterActivity
        class MainActivity: FlutterActivity() {}' > android/app/src/main/kotlin/com/example/t3r_c0d3/MainActivity.kt
        
        echo '<manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET" />
            <application android:label="T3R-C0D3" android:name="${applicationName}" android:icon="@mipmap/ic_launcher">
                <activity android:name=".MainActivity" android:exported="true" android:launchMode="singleTop" android:theme="@style/LaunchTheme" android:windowSoftInputMode="adjustResize">
                    <meta-data android:name="io.flutter.embedding.android.NormalTheme" android:resource="@style/NormalTheme" />
                    <intent-filter android:autoVerify="true">
                        <action android:name="android.intent.action.MAIN"/>
                        <category android:name="android.intent.category.LAUNCHER"/>
                    </intent-filter>
                </activity>
                <meta-data android:name="flutterEmbedding" android:value="2" />
            </application>
        </manifest>' > android/app/src/main/AndroidManifest.xml

        # ARREGLAR build.gradle.kts CORRUPTO
        cat > android/app/build.gradle.kts << 'EOF'
        plugins {
            id("com.android.application")
            id("org.jetbrains.kotlin.android")
            id("dev.flutter.flutter-gradle-plugin")
        }

        val localProperties = java.util.Properties()
        val localPropertiesFile = rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            localPropertiesFile.inputStream().use { localProperties.load(it) }
        }

        val flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
        val flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

        android {
            namespace = "com.example.t3r_c0d3"
            compileSdk = 34

            compileOptions {
                sourceCompatibility = JavaVersion.VERSION_1_8
                targetCompatibility = JavaVersion.VERSION_1_8
            }
            
            kotlinOptions {
                jvmTarget = "1.8"
            }

            defaultConfig {
                applicationId = "com.example.t3r_c0d3"
                minSdk = 21
                targetSdk = 34
                versionCode = flutterVersionCode.toInt()
                versionName = flutterVersionName
            }

            buildTypes {
                release {
                    isMinifyEnabled = false
                    signingConfig = signingConfigs.getByName("debug")
                }
            }
        }

        flutter {
            source = "../.."
        }
        EOF

    - name: Build
      run: |
        flutter clean
        flutter pub get
        flutter build apk --release --target-platform android-arm64 --android-skip-build-dependency-validation
        
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: build/app/outputs/flutter-apk/app-release.apk